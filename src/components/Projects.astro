---
import GitHub from './icons/GitHub.astro'
import React from './icons/React.astro'
import Node from './icons/Node.astro'
import Express from './icons/Express.astro'
import Swagger from './icons/Swagger.astro'
import Sass from './icons/Sass.astro'
import Babel from './icons/Babel.astro'
import Tailwind from './icons/Tailwind.astro'
import Link from './icons/Link.astro'
import LinkButton from './LinkButton.astro'

const TAGS = {
  REACT: {
    name: 'React.js',
    class: 'bg-black text-white',
    icon: React
  },
  NODE: {
    name: 'Node.js',
    class: 'bg-black text-white',
    icon: Node
  },
  EXPRESS: {
    name: 'Express',
    class: 'bg-black text-white',
    icon: Express
  },
  SWAGGER: {
    name: 'Swagger',
    class: 'bg-black text-white',
    icon: Swagger
  },
  SASS: {
    name: 'Sass',
    class: 'bg-black text-white',
    icon: Sass
  },
  BABEL: {
    name: 'Babel',
    class: 'bg-black text-white',
    icon: Babel
  },
  TAILWIND: {
    name: 'Tailwind CSS',
    class: 'bg-[#003159] text-white',
    icon: Tailwind
  }
}
const PROJECTS = [
  {
    title: 'API - Rest - Express',
    description:
      'Gestiona usuarios con operaciones Create, Read, Update y Delete. Interfaz intuitiva para demos de integración con clientes.',
    link: 'https://low-lenora-luisrivas-7f9b906d.koyeb.app/api/docs/',
    github: 'https://github.com/luisrivas123/api-integrations',
    image: '/projects/api-rest.webp',
    tags: [TAGS.NODE, TAGS.EXPRESS, TAGS.SWAGGER]
  },
  {
    title: 'Ecommerce - SPA',
    description:
      'Plataforma de compras que gestiona productos y carritos. Creada desde cero con React.',
    link: 'https://luisrivas123.github.io/react-shop/',
    github: 'https://github.com/luisrivas123/react-shop',
    image: '/projects/ecommerce.webp',
    tags: [TAGS.REACT, TAGS.SASS, TAGS.BABEL]
  }
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt="Recién llegado vs 5 años en Nueva Zelanda"
              class="object-cover object-top w-full h-56 transition duration-500 md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
